CSC 418 - Assignment 1 Report File

In this file you must:

__________________________________________________________________
1) Describe *briefly* and *concisely* what parts of the assignment
   you found easier, harder, and/or tricky to get right

   The easiest part is to add the controllers. Since there was 
   an example given, it is easy to reference to it and add the 
   rest of the controllers. The harder part is to implement the 
   drawBoid function, where I find myself spending more time 
   than expected to understand the codes for OpenGL, as well as
   finding how to code so I get what I wanted from the program.



__________________________________________________________________
2) Answer any //QUESTION: items noted in the code

  QUESTION:
   Is this the optimal way to implement this
   rule? can you see any problems or ways
   to improve this bit?
  
  Ans: No this is not the optimal way. The problem is each boid has to 
		loop through all of the other boids which increases the program's
		overall runtime. An easier way to find the center of mass would solve this
		issue.
  QUESTION: Why add inertia at the end and not at the beginning?
	Ans: The current boid's velocity would not change until we update it after going through the rules, 
		therefore if we add the inertia at the beginning, the velocity that changes will require
		an update to the inertia so we will have to perform an extra step, which is inefficient.
	






__________________________________________________________________
3) Describe any //CRUNCHY: extensions you implemented

	N/A



__________________________________________________________________

4) Briefly comment on the following:

a) What is the time complexity of the boid update (in big Oh notation),
   justify.

   Ans: Time complexity is O(n^2) since every boid needs to check against
   all of the other boids.

b) What could you do to make the update more efficient?

    Ans: An array or some data structure that stores the distance between two boids, so it takes less time
    to maintain this structure than to loop through all boids.


c) What is the greatest bottleneck of the program:

    Is it the boid update code?
    Or is it the boid display code?

    Why is that? justify your answer.
	
    Ans: The boid display code, because it takes much more time to tune and fix the codes so the output
    display matches my expectations. The boid update code is challenging at the beginning but once
    I have figured out how to start the first rule I can complete the rest rather quickly.

d) How would you adapt the idea behind Boids to swarms of running
   creatures (e.g. a herd of charging animals, an army of CGI
   monsters, a crowd of simulated humans walking). Think of the
   specific conditions you would need to add to the simulation
   that are different from your Boids implementation

- Each creature may have different sizes compared to each others
- Adding a background or simulating the surrounding environment
- Additional animations for creature's behaviour (e.g. Battlecry for the animals/monsters)
